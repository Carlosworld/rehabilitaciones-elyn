{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Projectos\\\\terapia-fisca-elyn\\\\terapia-fisica\\\\components\\\\Form\\\\Form.js\";\nvar __jsx = React.createElement;\nimport { useForm } from 'react-hook-form';\nimport React from 'react';\nimport axios from 'axios'; // import { useRouter } from 'next/router';\n\nimport 'tailwindcss/tailwind.css';\n\nconst Contacto = () => {\n  var _errors$name, _errors$email, _errors$message;\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm(); //   const router = useRouter();\n\n  async function onSubmitForm(values) {\n    let config = {\n      method: 'post',\n      url: `https://www.com/api/contact`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: values\n    }; // console.log(values);\n\n    try {\n      const response = await axios(config); //   console.log(response);\n\n      if (response.status == 200) {\n        reset();\n        router.push('/');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"b py-16 bg-gray-50 px-4 sm:px-6 h-screen w-screen flex justify-center items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"mx-auto w-full max-w-2xl rounded-xl bg-white p-8 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    className: \"noo-sh-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Contactanos\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmitForm),\n    className: \"grid grid-cols-1 gap-y-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    for: \"name\",\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, \"Nombre completo\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    ref: register({\n      required: {\n        value: true,\n        message: 'Debes ingresar tu nombre.'\n      }\n    }),\n    className: `block w-full shadow py-3 px-4 placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md focus:outline-none focus:ring-2 ${errors.name ? 'ring-2 ring-red-500' : null}`,\n    placeholder: \"Nombre completo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    className: \"text-red-400 text-sm py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    for: \"email\",\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, \"Correo Electronico\"), __jsx(\"input\", {\n    name: \"email\",\n    type: \"text\",\n    ref: register({\n      required: {\n        value: true,\n        message: 'Debes ingresar tu dirección de correo electrónico.'\n      },\n      minLength: {\n        value: 8,\n        message: 'Esto no es suficiente para ser un correo electrónico.'\n      },\n      maxLength: {\n        value: 120,\n        message: 'Esto es demasiado largo.'\n      },\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: 'This needs to be a valid email address'\n      }\n    }),\n    className: `block w-full shadow py-3 px-4 placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md focus:outline-none focus:ring-2 ${errors.email ? 'ring-2 ring-red-500' : null}`,\n    placeholder: \"Correo Electronico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    className: \"text-red-400 text-sm py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    for: \"phone\",\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"Telefono\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    ref: register,\n    className: \"block w-full shadow py-3 px-4 placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md focus:outline-none focus:ring-2\",\n    placeholder: \"Telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    for: \"message\",\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, \"mensaje\"), __jsx(\"textarea\", {\n    name: \"message\",\n    rows: \"4\",\n    ref: register({\n      required: {\n        value: true,\n        message: 'Debes ingresar tu mensaje.'\n      },\n      maxLength: {\n        value: 1000,\n        message: \"Tu mensaje no puede tener más de 1000 caracteres\"\n      },\n      minLength: {\n        value: 50,\n        message: '¡Tu mensaje debe ser más largo que esto!'\n      }\n    }),\n    className: `block w-full shadow py-3 px-4 placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md focus:outline-none focus:ring-2 ${errors.message ? 'ring-2 ring-red-500' : null}`,\n    placeholder: \"Mensaje\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    className: \"text-red-400 text-sm py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, errors === null || errors === void 0 ? void 0 : (_errors$message = errors.message) === null || _errors$message === void 0 ? void 0 : _errors$message.message)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"inline-flex justify-center py-3 px-6 border border-transparent shadow text-base font-medium rounded-md text-white bg-blue-500 hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, \"Enviar\"))))));\n};\n\nexport default Contacto;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/Projectos/terapia-fisca-elyn/terapia-fisica/components/Form/Form.js"],"names":["useForm","React","axios","Contacto","register","handleSubmit","errors","reset","onSubmitForm","values","config","method","url","headers","data","response","status","router","push","err","console","error","required","value","message","name","minLength","maxLength","pattern","email"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n// import { useRouter } from 'next/router';\r\nimport 'tailwindcss/tailwind.css';\r\n\r\nconst Contacto = () => {\r\n    const { register, handleSubmit, errors, reset } = useForm();\r\n    //   const router = useRouter();\r\n      async function onSubmitForm(values) {\r\n        let config = {\r\n          method: 'post',\r\n          url: `https://www.com/api/contact`,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          data: values,\r\n        };\r\n        // console.log(values);\r\n        try {\r\n          const response = await axios(config);\r\n        //   console.log(response);\r\n          if (response.status == 200) {\r\n            reset();\r\n            router.push('/');\r\n          }\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      }\r\n    return (\r\n        <div>\r\n            <div className=\"b py-16 bg-gray-50 px-4 sm:px-6 h-screen w-screen flex justify-center items-center\">\r\n                <div className=\"mx-auto w-full max-w-2xl rounded-xl bg-white p-8 shadow\">\r\n                    <h2 className=\"noo-sh-title\">Contactanos</h2>\r\n                    <form\r\n                        onSubmit={handleSubmit(onSubmitForm)}\r\n                        className=\"grid grid-cols-1 gap-y-6\">\r\n                        <div>\r\n                            <label for=\"name\" className=\"sr-only\">\r\n                                Nombre completo\r\n            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                ref={register({\r\n                                    required: {\r\n                                        value: true,\r\n                                        message: 'Debes ingresar tu nombre.',\r\n                                    },\r\n                                })}\r\n                                className={`block w-full shadow py-3 px-4 placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md focus:outline-none focus:ring-2 ${errors.name ? 'ring-2 ring-red-500' : null\r\n                                    }`}\r\n                                placeholder=\"Nombre completo\"\r\n                            />\r\n                            <span className=\"text-red-400 text-sm py-2\">\r\n                                {errors?.name?.message}\r\n                            </span>\r\n                        </div>\r\n                        <div>\r\n                            <label for=\"email\" className=\"sr-only\">\r\n                                Correo Electronico\r\n            </label>\r\n                            <input\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                ref={register({\r\n                                    required: {\r\n                                        value: true,\r\n                                        message: 'Debes ingresar tu dirección de correo electrónico.',\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 8,\r\n                                        message: 'Esto no es suficiente para ser un correo electrónico.',\r\n                                    },\r\n                                    maxLength: {\r\n                                        value: 120,\r\n                                        message: 'Esto es demasiado largo.',\r\n                                    },\r\n                                    pattern: {\r\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                        message: 'This needs to be a valid email address',\r\n                                    },\r\n                                })}\r\n                                className={`block w-full shadow py-3 px-4 placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md focus:outline-none focus:ring-2 ${errors.email ? 'ring-2 ring-red-500' : null\r\n                                    }`}\r\n                                placeholder=\"Correo Electronico\"\r\n                            />\r\n                            <span className=\"text-red-400 text-sm py-2\">\r\n                                {errors?.email?.message}\r\n                            </span>\r\n                        </div>\r\n                        <div>\r\n                            <label for=\"phone\" className=\"sr-only\">\r\n                                Telefono\r\n            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"phone\"\r\n                                ref={register}\r\n                                className=\"block w-full shadow py-3 px-4 placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md focus:outline-none focus:ring-2\"\r\n                                placeholder=\"Telefono\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label for=\"message\" className=\"sr-only\">\r\n                                mensaje\r\n            </label>\r\n                            <textarea\r\n                                name=\"message\"\r\n                                rows=\"4\"\r\n                                ref={register({\r\n                                    required: {\r\n                                        value: true,\r\n                                        message: 'Debes ingresar tu mensaje.',\r\n                                    },\r\n                                    maxLength: {\r\n                                        value: 1000,\r\n                                        message: \"Tu mensaje no puede tener más de 1000 caracteres\",\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 50,\r\n                                        message: '¡Tu mensaje debe ser más largo que esto!',\r\n                                    },\r\n                                })}\r\n                                className={`block w-full shadow py-3 px-4 placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md focus:outline-none focus:ring-2 ${errors.message ? 'ring-2 ring-red-500' : null\r\n                                    }`}\r\n                                placeholder=\"Mensaje\"></textarea>\r\n                            <span className=\"text-red-400 text-sm py-2\">\r\n                                {errors?.message?.message}\r\n                            </span>\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"inline-flex justify-center py-3 px-6 border border-transparent shadow text-base font-medium rounded-md text-white bg-blue-500 hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n                                Enviar\r\n            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contacto;\r\n"]},"metadata":{},"sourceType":"module"}